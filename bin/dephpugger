#!/usr/bin/env php
<?php

$autoloads = [
    dirname(dirname(dirname(dirname(__DIR__)))) . DIRECTORY_SEPARATOR,
];

// Checking if file is found
$dirPath = false;
foreach($autoloads as $path) {
    $autoload = $path . 'vendor' . DIRECTORY_SEPARATOR . 'autoload.php';
    if(file_exists($autoload)) {
        require_once $autoload;
        $dirPath = $path;
        break;
    }
}

// If not found, get message error
if(!$dirPath) {
    echo "Cannot find autoload.php in folders: \n";
    foreach($autoloads as $autoload) {
        echo " - {$autoload}" . 'vendor' . DIRECTORY_SEPARATOR . "autoload.php\n";
    }

    echo 'You must run `composer install` first.';
    exit;
}

// Folder vendor/ in project found
define('VENDORDIR', $dirPath.'vendor'.DIRECTORY_SEPARATOR.'tacnoman'.DIRECTORY_SEPARATOR.'dephpugger'.DIRECTORY_SEPARATOR);

/**
 * Function to include paths
 */
function includePaths($arrayOfPaths, &$application=null)
{
    $paths = [];
    foreach($arrayOfPaths as $path) {
        $pathFile = VENDORDIR.$path;
        $files = glob($pathFile);
        $paths = array_merge($paths, $files);
    }

    foreach($paths as $path)
    {
        require_once $path;
    }
}

// Paths to load all classes in src/Dephpug (like psr-0)
$paths = [
    implode(DIRECTORY_SEPARATOR, ['src', 'Dephpug', '***.php']),
    implode(DIRECTORY_SEPARATOR, ['src', 'Dephpug', '**', '*.php']),
    implode(DIRECTORY_SEPARATOR, ['src', 'Dephpug', '**', '**', '*.php']),
];
includePaths($paths);

// Create application
$application = new Symfony\Component\Console\Application();
$application->run();
